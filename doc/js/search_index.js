var search_data = {"index":{"searchIndex":["disk","hanoigame","peg","ui","check_ending_condition()","display()","legal_move()","move_disk()","new()","new()","new()","new()","run()","set_disks()","gemfile","gemfile.lock"],"longSearchIndex":["disk","hanoigame","peg","ui","hanoigame#check_ending_condition()","ui#display()","peg::legal_move()","peg::move_disk()","disk::new()","hanoigame::new()","peg::new()","ui::new()","hanoigame#run()","peg#set_disks()","",""],"info":[["Disk","","Disk.html","","<p>Represents a disk.\n"],["HanoiGame","","HanoiGame.html","","<p>The main class - responsible for gameplay.\n"],["Peg","","Peg.html","","<p>Represents a peg in the game.\n"],["UI","","UI.html","","<p>Responsible for the visualization of the game.\n"],["check_ending_condition","HanoiGame","HanoiGame.html#method-i-check_ending_condition","()","<p>Checks if the game should end.\n<p>returns true or false\n\n"],["display","UI","UI.html#method-i-display","()","<p>Displays the current state of the game based on the instance variables.\n"],["legal_move","Peg","Peg.html#method-c-legal_move","(peg1, peg2)","<p>Checks if it is possible to move a disk from peg1 to peg2.\n<p>peg1, peg2 - Peg objects\n\n"],["move_disk","Peg","Peg.html#method-c-move_disk","(peg1, peg2)","<p>Moves a disk from peg1 to peg2 or from peg2 to peg1 (whichever is legal).\n<p>peg1, peg2 - Peg objects\n\n"],["new","Disk","Disk.html#method-c-new","(size)","<p>Takes size of the disk.\n<p>size - integer\n\n"],["new","HanoiGame","HanoiGame.html#method-c-new","(disk_count, visualization_speed)","<p>Creates 3 Peg objects A, B, C and 1 UI object ui as instance variables. Takes the disk count and the …\n"],["new","Peg","Peg.html#method-c-new","(name)","<p>Takes 1 argument - name of the peg.\n<p>string\n\n"],["new","UI","UI.html#method-c-new","(pegs, disk_count, visualization_speed, moves)","<p>Takes all the data necessary for displaying the game.\n<p>pegs - an array of Peg objects\n<p>disk_count - integer …\n"],["run","HanoiGame","HanoiGame.html#method-i-run","()","<p>Runs the game. Moves the disks until the ending condition is met. Asks the UI object (created in the …\n"],["set_disks","Peg","Peg.html#method-i-set_disks","(disk_count)","<p>Sets disks on the peg. Used on the starting peg.\n<p>disk_count - integer\n\n"],["Gemfile","","Gemfile.html","","<p># frozen_string_literal: true\n<p>source “rubygems.org”\n<p># gem “rails”\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  diff-lcs (1.5.1)\n  rspec (3.13.0)\n    rspec-core (~&gt; 3.13.0) ...</pre>\n"]]}}